return {
    {
        "nvim-treesitter/nvim-treesitter-textobjects",
        branch = "main",
        dependencies = { "nvim-treesitter/nvim-treesitter" },
    },
    {
        "nvim-treesitter/nvim-treesitter",
        cond = not vim.g.vscode,
        branch = "main",
        build = ":TSUpdate",
        cmd = { "TSLog", "TSUninstall", "TSUpdate", "TSInstall", "TSInstallFromGrammar" },
        lazy = false,
        opts = {
            ensure_installed = {
                "asm",
                "awk",
                "bash",
                "bzl",
                "c",
                "c3",
                "cmake",
                "comment",
                "cpp",
                "css",
                "csv",
                "cuda",
                "diff",
                "dockerfile",
                "dot",
                "doxygen",
                "editorconfig",
                "fsh",
                "gdscript",
                "gdshader",
                "git_config",
                "git_rebase",
                "gitattributes",
                "gitcommit",
                "gitignore",
                "glsl",
                "haskell",
                "haskell_persistent",
                "hlsl",
                "html",
                "html_tags",
                "http",
                "idl",
                "javascript",
                "jq",
                "jsdoc",
                "json",
                "json5",
                "jsonc",
                "just",
                "latex",
                "lua",
                "luadoc",
                "luap",
                "luau",
                "make",
                "markdown",
                "markdown_inline",
                "matlab",
                "mermaid",
                "ninja",
                "odin",
                "powershell",
                "printf",
                "proto",
                "python",
                "query",
                "regex",
                "requirements",
                "rust",
                "scss",
                "ssh_config",
                "starlark",
                "tmux",
                "toml",
                "tsx",
                "typescript",
                "vim",
                "vimdoc",
                "xml",
                "yaml",
                "zig",
            },
            filetypes = {
                "bash",
                "bzl",
                "c",
                "c3",
                "checkhealth",
                "cmake",
                "cmakecache",
                "cpp",
                "css",
                "csv",
                "cterm",
                "diff",
                "dockerfile",
                "dot",
                "doxygen",
                "editorconfig",
                "fish",
                "fugitive",
                "fugitiveblame",
                "gdb",
                "gdscript",
                "gdshader",
                "git",
                "gitattributes",
                "gitcommit",
                "gitconfig",
                "gitignore",
                "gitolite",
                "gitrebase",
                "gitsendemail",
                "glsl",
                "haskell",
                "html",
                "javascript",
                "jsdoc",
                "lua",
                "printf",
                "regex",
                "vimdoc",
                "typescript",
                "help",
                "idl",
                "json",
                "json5",
                "jsonc",
                "jsonnet",
                "ld",
                "less",
                "lhaskell",
                "lsp_markdown",
                "make",
                "man",
                "manual",
                "markdown",
                "mermaid",
                "messages",
                "ninja",
                "obj",
                "objc",
                "objcpp",
                "objdump",
                "odin",
                "pandoc",
                "pdf",
                "proto",
                "python",
                "python2",
                "requirements",
                "rust",
                "sed",
                "sh",
                "shada",
                "shaderslang",
                "sshconfig",
                "sshdconfig",
                "stylus",
                "systemd",
                "tmux",
                "toml",
                "valgrind",
                "vim",
                "viminfo",
                "vimnormal",
                "wget",
                "wget2",
                "whitespace",
                "winbatch",
                "xml",
                "yacc",
                "yaml",
                "zig",
                "zsh",
            },
        },
        config = function(_, opts)
            local already_installed = require("nvim-treesitter").get_installed()
            local parsers_to_install = vim.iter(opts.ensure_installed)
                :filter(function(parser)
                    return not vim.tbl_contains(already_installed, parser)
                end)
                :totable()
            require("nvim-treesitter").install(parsers_to_install)
            require("nvim-treesitter").update(already_installed)

            vim.api.nvim_create_autocmd("FileType", {
                pattern = opts.filetypes,
                callback = function()
                    vim.treesitter.start()
                    vim.wo.foldexpr = "v:lua.vim.treesitter.foldexpr()"
                    vim.bo.indentexpr = "v:lua.require'nvim-treesitter'.indentexpr()"
                end,
            })

            -- local f = io.open("ts.log", "w")
            -- if f then
            --     f:write(vim.inspect(require("nvim-treesitter").get_available()))
            --     f:close()
            --     print("Written to ")
            -- else
            --     print("Could not open file: ")
            -- end
        end,
    },
}
